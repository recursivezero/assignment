---
import Header from "./Header.astro";
import LightDarkMode from "../components/lightDarkMode.astro";
---

<style>
  @font-face 
  {
      font-family: gilroy;
      src: url(/gilroy/Gilroy-Regular.ttf);
  }

  div #navbar
  {
    background-color: #000;
  }

  #navbar
  {
    background: none;
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 20px;
    margin-bottom: -1.8em;
    transition: background-color 0.3s, color 0.3s; /* Smooth transition */
  }

  #languageSwitcher
  {
    padding: 0.5em;
    background: none;
    border-radius: 10px;
    border: none;
    background-color: #000;
    color: #ffffff;
    box-shadow: rgba(255, 255, 255, 0.886) 0px 3px 8px;
  }

  /* #theme-toggle
  {
    background-color: rgb(23, 23, 23);
    border-radius: 20px;
    padding: 0.2em;
    border: none;
    box-shadow: rgb(255, 255, 255) 0px 3px 8px;
  }

  #theme-toggle:hover
  {
    transform: scale(1.2);
  } */

  :root {
    --bg-color: white;
    --text-color: black;
  }
  [data-theme="dark"] {
    --bg-color: black;
    --text-color: white;
  }

  body {
    background-color: var(--bg-color);
    color: var(--text-color);
    transition: background-color 0.3s, color 0.3s;
  }

  #theme-toggle {
    cursor: pointer;
    padding: 0.5em;
    background-color: var(--text-color);
    color: var(--bg-color);
    border: none;
    border-radius: 50%;
    font-size: 1em;
  }

  #i18nBtn
  {
    text-decoration: none;
  }
  
  a
  {
    color: rgb(255, 190, 69);
    text-decoration: none;
    border: 1px solid #fff;
    padding: 0.5em;
    border-radius: 10px;
    box-shadow: rgba(255, 255, 255, 0.886) 0px 3px 8px;
  }

</style>

<nav>
  <div id="navbar">
    <Header/>
    <!-- Language Selector -->
    <select id="languageSwitcher">
      <option value="en">English</option>
      <option value="hindi">Hindi</option>
    </select>
    <LightDarkMode/>
    <a id="i18nBtn" href="/blog/" target="_blank">i18n Blog</a>
  </div>
</nav>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    // Debugging: Log initialization
    console.log("Initializing language switcher and theme toggle...");

    // Theme toggle logic
    const themeToggle = document.getElementById("theme-toggle");
    const savedTheme = localStorage.getItem("theme") || "light";

    document.documentElement.setAttribute("data-theme", savedTheme);
    console.log(`Loaded theme: ${savedTheme}`);

    themeToggle.addEventListener("click", () => {
      const currentTheme = document.documentElement.getAttribute("data-theme");
      const newTheme = currentTheme === "light" ? "dark" : "light";

      document.documentElement.setAttribute("data-theme", newTheme);
      localStorage.setItem("theme", newTheme);

      // Debugging: Log theme change
      console.log(`Theme changed to: ${newTheme}`);
    });

    // Language switcher logic
    const languageSwitcher = document.getElementById("languageSwitcher");
    const savedLanguage = localStorage.getItem("language") || "en";

    // Debugging: Log initial language
    console.log(`Initial language: ${savedLanguage}`);

    async function updateLanguage(lang) {
      try {
        // Debugging: Log language update attempt
        console.log(`Updating language to: ${lang}`);

        // Save selected language in localStorage
        localStorage.setItem("language", lang);

        // Reload the page with the selected language
        const currentUrl = new URL(window.location.href);
        currentUrl.searchParams.set("lang", lang);
        window.location.href = currentUrl.toString();
      } catch (error) {
        // Debugging: Log any errors
        console.error("Error updating language:", error);
      }
    }

    languageSwitcher.addEventListener("change", (event) => {
      const selectedLanguage = event.target.value;
      updateLanguage(selectedLanguage);
    });

    // Initialize language switcher with saved language
    languageSwitcher.value = savedLanguage;
    console.log("Language switcher initialized.");
  });
</script>



